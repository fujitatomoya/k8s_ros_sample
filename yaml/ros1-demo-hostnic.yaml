apiVersion: apps/v1
kind: Deployment
metadata:
  name: ros1-demo-0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ros1
  template:
    metadata:
      labels:
        app: ros1
    spec:
      containers:
      - name: ros1-master-0
        image: docker-registry:5000/rosmelodic:1.0.0
        command: ["/bin/bash", "-c"]
        args: ["source /opt/ros/$ROS_DISTRO/setup.bash  && roscore"]
        imagePullPolicy: IfNotPresent
      - name: ros1-talker-0
        image: docker-registry:5000/rosmelodic:1.0.0
        command: ["/bin/bash", "-c"]
        args: ["source /opt/ros/$ROS_DISTRO/setup.bash && until rostopic list; do sleep 1; done && rostopic pub -r 1 chatter std_msgs/String \"Hello, world\""]
        imagePullPolicy: IfNotPresent
      - name: ros1-listener-0
        image: docker-registry:5000/rosmelodic:1.0.0
        command: ["/bin/bash", "-c"]
        args: ["source /opt/ros/$ROS_DISTRO/setup.bash && until rostopic list; do sleep 1; done && rostopic echo chatter"]
        imagePullPolicy: IfNotPresent
      hostNetwork: true
      imagePullSecrets:
      - name: docker-registry
      nodeSelector:
        nodetype: master
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      restartPolicy: Always

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ros1-demo-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ros1
  template:
    metadata:
      labels:
        app: ros1
    spec:
      containers:
      - name: ros1-master-1
        image: docker-registry:5000/rosmelodic:1.0.0
        command: ["/bin/bash", "-c"]
        args: ["source /opt/ros/$ROS_DISTRO/setup.bash && roscore"]
        imagePullPolicy: IfNotPresent
      - name: ros1-talker-1
        image: docker-registry:5000/rosmelodic:1.0.0
        command: ["/bin/bash", "-c"]
        args: ["source /opt/ros/$ROS_DISTRO/setup.bash && until rostopic list; do sleep 1; done && rostopic pub -r 1 chatter std_msgs/String \"Hello, world\""]
        imagePullPolicy: IfNotPresent
      - name: ros1-listener-1
        image: docker-registry:5000/rosmelodic:1.0.0
        command: ["/bin/bash", "-c"]
        args: ["source /opt/ros/$ROS_DISTRO/setup.bash && until rostopic list; do sleep 1; done && rostopic echo chatter"]
        imagePullPolicy: IfNotPresent
      hostNetwork: true
      imagePullSecrets:
      - name: docker-registry
      restartPolicy: Always

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ros1-demo-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ros1
  template:
    metadata:
      labels:
        app: ros1
    spec:
      containers:
      - name: ros1-master-2
        image: docker-registry:5000/rosmelodic:1.0.0
        command: ["/bin/bash", "-c"]
        args: ["source /opt/ros/$ROS_DISTRO/setup.bash && roscore"]
        imagePullPolicy: IfNotPresent
      - name: ros1-talker-2
        image: docker-registry:5000/rosmelodic:1.0.0
        command: ["/bin/bash", "-c"]
        args: ["source /opt/ros/$ROS_DISTRO/setup.bash && until rostopic list; do sleep 1; done && rostopic pub -r 1 chatter std_msgs/String \"Hello, world\""]
        imagePullPolicy: IfNotPresent
      - name: ros1-listener-2
        image: docker-registry:5000/rosmelodic:1.0.0
        command: ["/bin/bash", "-c"]
        args: ["source /opt/ros/$ROS_DISTRO/setup.bash && until rostopic list; do sleep 1; done && rostopic echo chatter"]
        imagePullPolicy: IfNotPresent
      hostNetwork: true
      imagePullSecrets:
      - name: docker-registry
      restartPolicy: Always
